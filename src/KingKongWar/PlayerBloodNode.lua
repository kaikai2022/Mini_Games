---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lucus.
--- DateTime: 19/7/2022 3:50 PM
---

local PlayerBloodNode = class("PlayerBloodNode", cc.Node)
local OverScene = require("KingKongWar.OverScene")
PlayerBloodNode.MaxBlood = 4
function PlayerBloodNode:ctor(playerId)
    self.playerId = playerId
    local imagePath = playerId == 1 and "KingKongWar/images/gaming/player1_blood.png" or "KingKongWar/images/gaming/player2_blood.png"
    local image = ccui.ImageView:create(imagePath)
                      :setAnchorPoint(playerId == 1 and 1 or 0, 0.5)
                      :addTo(self)
                      :setScale9Enabled(true)
    local imageSize = image:getContentSize()
    self._max_width = imageSize.width
    self._height = imageSize.height
    self.value = PlayerBloodNode.MaxBlood
    ---@private image 当前显示的图片
    self._image = image
end

---@public setValue 设置新的血量值 
---@param value number 设置当前的血量
function PlayerBloodNode:setValue(value)
    print(value)
    assert(value > -1 and value < PlayerBloodNode.MaxBlood + 1, "设置的value值错误")
    if self._isRunAnimation then
        if not self._setValueAnimations then
            self._setValueAnimations = {}
        end
        table.insert(self._setValueAnimations, value)
        return
    end
    self.value = value
    local now_width = self._max_width * (value / PlayerBloodNode.MaxBlood)
    local temp_width = self._image:getContentSize().width
    if (now_width < temp_width) then
        self._image:setContentSize(now_width, self._height)
    elseif (now_width > temp_width) then
        self._image:setContentSize(now_width, self._height)
    end
    if self.value <= 0 then
        OverScene:create(self.playerId == 1 and 2 or 1)
    end
end

---@public setValueSetCallback 设置当前血量后的回调方法
---@param callback function 回调方法
function PlayerBloodNode:setValueSetCallback(callback)
    ---@private _valueSetCallback 设置当前血量后的回调方法变量
    self._valueSetCallback = callback
end

function PlayerBloodNode:resetValue()
    self:setValue(PlayerBloodNode.MaxBlood)
end
return PlayerBloodNode