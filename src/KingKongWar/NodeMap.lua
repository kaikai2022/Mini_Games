---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by lucus.
--- DateTime: 19/7/2022 7:26 PM
---
local NodeMap = class("NodeMap", cc.Layer)
local root_path = "KingKongWar/images/gaming/maps"
NodeMap.config = {
    ---小树木从
    {
        image = "thicket_1.png",
        width = function()
            --math.randomseed(tostring(os.time()):reverse():sub(1, 6))
            return math.random(1, 2)
        end,
        height = 1,
    },
    ---大树木从
    --{
    --    image = "thicket_2.png",
    --    width = 1,
    --    height = 1,
    --},
    ---小别墅
    {
        image = "cottage.png",
        width = 2,
        height = function()
            --math.randomseed(tostring(os.time()):reverse():sub(1, 6))
            return math.random(2, 5)
        end,
    },
    ---中型别墅
    {
        image = "villa.png",
        width = function()
            --math.randomseed(tostring(os.time()):reverse():sub(1, 6))
            return math.random(2, 4)
        end,
        height = function()
            --math.randomseed(tostring(os.time()):reverse():sub(1, 6))
            return math.random(4, 7)
        end,
    },
    ---大型高楼
    {
        image = "high_rise_building.png",
        width = function()
            --math.randomseed(tostring(os.time()):reverse():sub(1, 6))
            return math.random(2, 5)
        end,
        height = function()
            --math.randomseed(tostring(os.time()):reverse():sub(1, 6))
            return math.random(4, 9)
        end,
    }
}

function NodeMap:ctor(id)
    self.config = NodeMap.config[id]
    if not self.config then
        self.config = NodeMap.config[1]
    end
    if type(self.config.width) == "function" then
        local temp = self.config.width()
        self.config.width = temp
    end
    if type(self.config.height) == "function" then
        local temp = self.config.height()
        self.config.height = temp
    end

    local imageItem = ccui.ImageView:create(root_path .. "/" .. self.config.image)
                          :setAnchorPoint(0, 0)
    local imageSize = imageItem:getContentSize()
    self:setContentSize(imageSize.width * self.config.width, imageSize.height * self.config.height)
    self:setAnchorPoint(0.5, 0)

    local PHYSICSBODY_MATERIAL_DEFAULT = { density = 100000, restitution = 0, friction = 10 }
    for index_x = 1, self.config.width do
        for index_y = 1, self.config.height do
            local image = imageItem:clone()
                                   :setAnchorPoint(0, 0)
            image:addTo(self)
            image:move((index_x - 1) * imageSize.width, (index_y - 1) * imageSize.height)
            local imageSize = image:getContentSize()
            local body = cc.PhysicsBody:createBox({ width = imageSize.width - 2, height = imageSize.height }, PHYSICSBODY_MATERIAL_DEFAULT)
            image:setPhysicsBody(body)
            body:setRotationEnable(false)
            body:setCategoryBitmask(0x04) --00 00 01 00
            body:setContactTestBitmask(0x01)
            body:setCollisionBitmask(0x07)

            image:setTag(11)
        end
    end

    --local body = cc.PhysicsBody:createEdgeBox(self:getContentSize(), cc.PHYSICSBODY_MATERIAL_DEFAULT, 2)
    --self:setPhysicsBody(body)
    --body:setCategoryBitmask(0x05)
    --body:setContactTestBitmask(0x03)
    --body:setCollisionBitmask(0x03)
    --
    --self:setTag(11)
    --dump(size)
    --print(display.width / 20)
end

return NodeMap